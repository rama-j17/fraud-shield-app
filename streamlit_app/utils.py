# -*- coding: utf-8 -*-
"""utils

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YBQ6o3kQAWI9S4VL_QtU48Y6f-8m1Iqs
"""

import pandas as pd
import joblib
from collections import defaultdict

# Load model and encoders
model = joblib.load('model/xgb_fraud_model.json')
le_dict = joblib.load('model/label_encoders.pkl')
seller_stats = defaultdict(lambda: {'total': 0, 'fraud': 0})

def safe_transform(le, col_data):
    known = set(le.classes_)
    return [le.transform([v])[0] if v in known else -1 for v in col_data]

def process_batch(df):
    for col in ['payment_method', 'device_type', 'location', 'seller_id']:
        if col in df:
            le = le_dict[col]
            df[col] = safe_transform(le, df[col])

    X = df[['seller_id', 'amount', 'payment_method', 'device_type', 'location']]
    preds = model.predict(X)
    df['predicted_fraud'] = preds

    for _, row in df.iterrows():
        sid = row['seller_id']
        seller_stats[sid]['total'] += 1
        if row['predicted_fraud'] == 1:
            seller_stats[sid]['fraud'] += 1

    return df

def get_rwsi_leaderboard(min_txns=5):
    return pd.DataFrame([
        {'seller_id': sid, 'RWSI': round((v['fraud'] / v['total']) * 100, 2)}
        for sid, v in seller_stats.items() if v['total'] >= min_txns
    ]).sort_values(by='RWSI', ascending=False).head(10)